calculate_var[1:3,1:3]
length(calculate_var)
calculate_var
mean(calculate_var)
25- 24.32398
data(ToothGrowth)
dim(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
boxplot(ToothGrowth)
head(ToothGrowth)
boxplot(len ~ supp)
attach(ToothGrowth)
boxplot(len ~ supp)
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
library(swirl)
swirl()
library(swirl)
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
library(swirl)
swirl()
11/12
deck
1/52
52
4/52
4/5
4/5
1/4
4/52
4
1/4
4/52
1/52
5/4
4/5
info()
skip()
9/52
1/9
1/12
12/52
1/2
1/2
2/3
info()
skip()
11/12
deck
1/52
52
4/52
4/52
5/4
0.66
0
12/52
2/51
.64
.64
mypdf
mypdf(0.1.6)
mypdf(0,1.6)
mypdf(1.6)
integrate(mypdf, 0, 1.6)
.64
2
1
skip)
skip())
skip()
1.0998
.09
.0997
skip()
.985 * .999
.997 * .999
.003 * .999
.3 * .999
skip()
skip()
swirl
swirl()
1
3.3
35
3.5
expect_dice
dice_high
0.166
expect_dice(dice_high)
expect_dice(dice_low)
.5 *(E(edh))+E(edl)
.5 *((edh))+(edl)
.5 *(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
swirl()
install.packags("labeling)
install.packags("labeling")
install.packags("labeling")
install.packages("labeling")
install.packags("labeling)
swirl()
swirl()
install.packages("labeling")
swirl()
.997*.001
.985*.999
skip()
skip()
library(swirl)
swirl()
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
10/sqrt(4)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3) * (3)^.8 * 2^(.2) + choose(5,4)*(4)^.8 *1^(.2) +choose(5,5)*(5)^.8 *0^(.2)
choose(5,3) * (.8)^3 * .2^(2) + choose(5,4)*(.8)^4 *0.2^(1) +choose(5,5)*(.8)^5 *.2^(0)
pbinom(quantile=2, size=5, prob=.8, lower.tail=FALSE)
pbinom(2, size=5, prob=.8, lower.tail=FALSE)
qnorm(10)
qnorm(.1)
0
qnorm(97.5)
qnorm(.975, mean=2, sd=2)
qnorm(.975, mean=3, sd=2)
3+1.96*2
pnorm(1200, mean=1020, sd=50, lower.tail=FALSE)
pnorm(1200, lower.tail=FALSE)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(.75, mean=1020, sd=50, lower.tail=TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3, 2.5*4, lower.tail=TRUE, log.p=FALSE)
pbinom(5,1000, 0.1)
pbinom(5,1000, 0.1)
pbinom(5,1000, .01)
ppois(5,lambda=1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
qnorm(.975, c(-1,1))
.6+c(-1,1)*qnorm(.6*.4/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
.2+c(-1,1)
mywald(.2)
library(swirl)
swirl()
cran()
(cran, country:r_archer)
(cran, country:r_archer)
(cran, country:r_archer)
(cran, country:r_archer)
info()
(cran, country:r_archer)''
nxt()
head(cran)
(cran, country:r_arch)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,X:country)
select(cran,-(X:size)
)
filter(cran, package =="swirl")
filter(cran, r_version == "3.1.1", country =="US")
?Comparison
filter(cran, r_version == "3.0.2", country =="US")
filter(cran, r_version == "3.0.2", country =="IN")
filter(cran, r_version <= "3.0.2", country =="IN")
filter(cran, country=="US"| country =="IN")
filter(cran, size > 100500 & r_os =="linux-gnu")
filter(cran, size > 100500 && r_os =="linux-gnu")
filter(cran, size > 100500, r_os =="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filtr(cran, !is.na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, ip_id:store)
cran2 <- select(cran, ip_id:size, store)
cran2 <- select(cran,size:ip_id, store)
cran2 <- select(cran, size:ip_id, store)
cran2 <- select(cran,size:ip_id)
arrrange
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_gb=size_mb/2^10)
mutate(cran3, size_gb= size_mb / 2^10)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size-1000)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
skip()
info()
main()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by()
?group_by
by_package <- group_by(cran, pakage)
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
count =n(by_package)
count =(by_package)
unique=(ip_id)
unique=(by_package,ip_id)
unique=(by_package)
countries=(by_package)
avg_bytes=mean(by_average)
avg_bytes=mean(by_package)
avg_bytes=mean(by_package)
avg_bytes=mean(size)
avg_bytes=mean(by_package)
submit()
count = (by_package)
unique = (by_package)
countries = (by_package)
avg_bytes = mean(size)
avg_bytes = mean(by_package)
avg_bytes = mean(cran)
skip()
resulting tbl
pack_sum
quantile(pack_sum$count, prob=0.99)
top_count <- filter(pack_sum, count >679)
top_counts <- filter(pack_sum, count >679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts,(desc) count)
top_counts_sorted <- arrange(top_counts,(desc)count)
top_counts_sorted <- arrange(top_counts,(desc)count)
arrange(top_counts,(desc)count)
?arrange
?desc
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridata)
help(package=lubridate)
this_try <- today()
this_day <- today()
this_day
year()
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12 1975")
mdy("March 12 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms()
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
update(this_moment, hours=9, minutes=34, seconds=55)
this_moment <- now()
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now(time zone=America)
nyc <- now(zone=America)
nyc <- now(zone=PST)
nyc <- now(zone="America")
skip()
nyc
depart<-nyc + days(2)
deapart
depart
depart <- update(depart, hours=17, minutes=34, seconds=0)
depart <- update(depart, hours=17, minutes=34)
depart
nyc + day(@)
nyc + day(2)
arrive <- update(depart, hour=15, minutes=15)
arrive <- depart, hours(15), minutes(50)
arrive <- depart+ hours(15), minutes(50)
arrive <- depart+ hours(15)+ minutes(50)
?with_tz
with_tz("Asia/Hong-Kong")
with_tz(arrive ,"Asia/Hong-Kong")
arrive <- with_tz(arrive ,"Asia/Hong-Kong")
arrive <- with_tz(arrive ,"Asia/Hong-Kong")
arrive = with_tz(arrive ,"Asia/Hong-Kong")
arrive <-  with_tz(arrive ,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_iterval
?new_interval
how_long <- new_interval()
how_long <- new_interval(last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch
stopwatch()
library(swirl)
swirl()
.60+c(-1,+1) qnorm(.975)* sqrt(.6(.40)/100)
.60+c(-1,+1), qnorm(.975)* sqrt(.6(.40)/100)
.60+c(-1,+1) qnorm(.975)* sqrt(.6(.40)/100)
.60+c(-1,+1) (qnorm(.975)* sqrt(.60(.40)/100))
.60+c(-1,+1)+qnorm(.975)* sqrt(.60(.40)/100)
.60+qnorm(.975)* sqrt(.60(.40)/100)
.60+qnorm(.975)* sqrt(.60(.40)/100)
.60 + c(-1,1)qnorm(.975)* sqrt(.60(.40)/100)
.60 + c(-1,1)...qnorm(.975)* sqrt(.60(.40)/100)
?qnorm
.60 + qnorm(.975)* sqrt(.60(.40)/100)
qnorm(.975)* sqrt(.60(.40)/100)
skip()
x$conf
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb=5/94.32
lamb <- 5/94.32
lamb *qnorm(0.975)*sqrt(lamb/t)
lamb +qnorm(0.975)*sqrt(lamb/t)
lamb *qnorm(.975)*sqrt(lamb/t)
lamb *qnorm(.975)*sqrt(lamb/94.32)
lamb +c(-1,1) *qnorm(.975)*sqrt(lamb/94.32)
x$conf
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
g1
range(g1)
range(g2)
g1-g2
difference <- g2-g1
difference
mean(difference)
sd(difference)
s <- sd(difference)
1.58+c(-1,1)*qt(.975)*10-1* s/sqrt(10)
1.58*qt(.975)*10-1* s/sqrt(10)
1.58*qt(.975)*df(10-1)* s/sqrt(10)
1.58*qt(.975)df(10-1)* s/sqrt(10)
1.58+c(-1,1)*qt(.975)*10-1* s/sqrt(10)
1.58+c(-1,1)*qt(.975)*df(10-1)* s/sqrt(10)
1.58+c(-1,1)*qt(.975)*df(10-1)* s/sqrt(10)
1.58+c(-1,1)*qt(0.975)*df(10-1)* s/sqrt(10)
1.58+c(-1,1)*qt(0.975)* s/sqrt(10)
1.58+c(-1,1)*qt(0.975, df=10-1)* s/sqrt(10)
mn+c(-1,1)*qt(0.975, df=9)* s/sqrt(10)
t.test(difference)
t.test(difference)$conf.int
7*(15.34)^2 + 20*(18.23)^2
sp <- 7*(15.34)^2 + 20*(18.23)^2
nx <- 8+21-2
nx <- 28
nx <- 27
nx <- 8
nx <- (8+21)-2
ns <- (8+21)-2
sp <- sqrt(sp/ns)
132.86-127.44 + c(+1,-1)qt(0.975, 27)*sp
132.86-127.44 + c(+1,-1)*qt(0.975, 27)*sp
132.86-127.44 + c(+1,-1)*qt(0.975, ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
g1-g2+c(-1,1)*qt(.975, 18)*sp*sqrt(1/10+1/10)
sp <- sqrt((9*var(g1)+9*var(g2))/18
)
sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5
)
t.test(g2-g1, paired=FALSE, var.equal=TRUE)x$conf
t.test(g2-g1, paired=FALSE, var.equal=TRUE)
t.test(g2-g1, paired=FALSE, var.equal=TRUE)x$conf
t.test(g2-g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2,g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2,g1, paired=TRUE)$conf
num <- 15.34^2/8 +18.23^2/21
num <- (15.34^2/8 +18.23^2/21)^2
den <- 15.34^4/8%2/(8-1)
den <- 15.34^4/8^2/(8-1) + (18.23^4)/21^2/(21-1)
mydf <- num/den
132.65
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21
)
library(swirl)
swirl()
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regline <- lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
lm(child ~ parent, data = dalton)
lm(child ~ parent, data = galton)
fit <- lm(child ~ parent, data = galton)
fit$residuals
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
data(mtcars)
data
data(mtcars)
mtcars
dim(mtcars)
names(mtcars)
lm(mpg ~ weight, data=mtcars)
lm(mtcars$mpg ~ mtcars$weight, data=mtcars)
lm(mtcars$mpg ~ mtcars$mt, data=mtcars)
lm(mtcars$mpg ~ mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
sum(x-mean(x))/sd(x)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
.4/1.5
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
y=mean(x)
new=(x-y)^2
new
hist(new)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w((x-mean(x)^2))
sum(w((x-mean(x))^2))
sum(w((x-mean(x))^2))
sum(w*((x-mean(x))^2))
library(lattice)
library(datasets)
names(datasets)
names(datasets)
names(airquality)
xyplot(Ozone ~Wind, data=airquality)
xyplot(Ozone ~Wind, data=airquality, type="l")
xyplot(Ozone ~Wind | factor(Month), data=airquality, type="l")
setwd("C:\\Users\\nikky\\DataScienceCoursera\\RepData_PeerAssessment1")
ls
list.files()
package("knitr")
library("knitr")
